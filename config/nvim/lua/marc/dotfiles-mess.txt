[1m[36mThe $XDG_DATA_HOME environment variable is not set, make sure to add it to your shell's configuration before setting any of the other environment variables![0m
[1m[36m    â¤· The recommended value is: [1m[3m$HOME/.local/share[0m
[1m[36mThe $XDG_CONFIG_HOME environment variable is not set, make sure to add it to your shell's configuration before setting any of the other environment variables![0m
[1m[36m    â¤· The recommended value is: [1m[3m$HOME/.config[0m
[1m[36mThe $XDG_STATE_HOME environment variable is not set, make sure to add it to your shell's configuration before setting any of the other environment variables![0m
[1m[36m    â¤· The recommended value is: [1m[3m$HOME/.local/state[0m
[1m[36mThe $XDG_CACHE_HOME environment variable is not set, make sure to add it to your shell's configuration before setting any of the other environment variables![0m
[1m[36m    â¤· The recommended value is: [1m[3m$HOME/.cache[0m
[1m[36mThe $XDG_RUNTIME_DIR environment variable is not set, make sure to add it to your shell's configuration before setting any of the other environment variables![0m
[1m[36m    â¤· The recommended value is: [1m[3m/run/user/$UID[0m

[1m[3mStarting to check your [36m$HOME[0m.

[[1m[31mandroid-studio[0m]: [1m[3m$HOME/.android[0m

Export the following environment variables:

export ANDROID_HOME="$XDG_DATA_HOME"/android

[[1m[31matom[0m]: [1m[3m$HOME/.atom[0m

Export the following environment variables:

export ATOM_HOME="$XDG_DATA_HOME"/atom

[[1m[31maws-cli[0m]: [1m[3m$HOME/.aws[0m

Export the following environment variables:

export AWS_SHARED_CREDENTIALS_FILE="$XDG_CONFIG_HOME"/aws/credentials
export AWS_CONFIG_FILE="$XDG_CONFIG_HOME"/aws/config

[[1m[33mbash[0m]: [1m[3m$HOME/.bash_profile[0m

Currently unsupported.

*Relevant issue:* https://savannah.gnu.org/support/?108134

[[1m[33mbash[0m]: [1m[3m$HOME/.bashrc[0m

Currently unsupported.

*Relevant issue:* https://savannah.gnu.org/support/?108134

[[1m[31mbash[0m]: [1m[3m$HOME/.bash_history[0m

Export the following environment variables:

export HISTFILE="${XDG_STATE_HOME}"/bash/history

[[1m[31mcabal[0m]: [1m[3m$HOME/.cabal[0m

Export the following environment variables:

export CABAL_CONFIG="$XDG_CONFIG_HOME"/cabal/config
export CABAL_DIR="$XDG_DATA_HOME"/cabal

*cabal* might also require you to edit your new
*XDG_CONFIG_HOME/cabal/config* file by replacing all mentions of *~/.cabal*
with either *XDG_CONFIG_HOME/cabal* or *XDG_DATA_HOME/cabal*.

[[1m[33mcargo[0m]: [1m[3m$HOME/.cargo[0m

Export the following environment variables:

export CARGO_HOME="$XDG_DATA_HOME"/cargo

[[1m[31mclojure[0m]: [1m[3m$HOME/.clojure[0m

XDG is supported out-of-the-box, so we can simply move the directory to
*XDG_CONFIG_HOME/clojure*.

[[1m[31mdocker[0m]: [1m[3m$HOME/.docker[0m

Export the following environment variables:

export DOCKER_CONFIG="$XDG_CONFIG_HOME"/docker

[[1m[31memacs[0m]: [1m[3m$HOME/.emacs.d/init.el[0m

Supported since *27.1*.

You can move the file to *XDG_CONFIG_HOME/emacs/init.el*.

[[1m[33memacs[0m]: [1m[3m$HOME/.emacs.d[0m

Currently unsupported.

*Relevant issue:* "Legacy paths have precedence over XDG paths. Emacs will
never create XDG_CONFIG_HOME/emacs/." according to XDG.

[[1m[31mghcup[0m]: [1m[3m$HOME/.ghcup[0m

Export the following environment variables:

export GHCUP_USE_XDG_DIRS=true

[[1m[31mgit[0m]: [1m[3m$HOME/.gitconfig[0m

XDG is supported out-of-the-box, so we can simply move the file to
*XDG_CONFIG_HOME/git/config*.

[[1m[31mgnupg[0m]: [1m[3m$HOME/.gnupg[0m

Export the following environment variables:

export GNUPGHOME="$XDG_DATA_HOME"/gnupg

[[1m[31mipython[0m]: [1m[3m$HOME/.ipython[0m

Supported since *8.0.0*.

You can move the file to *XDG_CONFIG_HOME/ipython*.

Or set the following environment variable:

export IPYTHONDIR="${XDG_CONFIG_HOME}/ipython"

[[1m[31mjupyter[0m]: [1m[3m$HOME/.jupyter[0m

Export the following environment variables:

export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME"/jupyter

[[1m[31mleiningen[0m]: [1m[3m$HOME/.m2[0m

See here https://wiki.archlinux.org/title/Leiningen#m2_repo_location.

[[1m[31mleiningen[0m]: [1m[3m$HOME/.lein[0m

Export the following environment variables:

export LEIN_HOME="$XDG_DATA_HOME"/lein

[[1m[31mless[0m]: [1m[3m${HOME}/.lesshst[0m

Export the following environment variables:

export LESSHISTFILE="$XDG_CACHE_HOME"/less/history

[[1m[31mncurses[0m]: [1m[3m$HOME/.terminfo[0m

Export the following environment variables:

export TERMINFO="$XDG_DATA_HOME"/terminfo
export TERMINFO_DIRS="$XDG_DATA_HOME"/terminfo:/usr/share/terminfo

[[1m[31mnpm[0m]: [1m[3m$HOME/.npm[0m

You need to put the following into your npmrc:

prefix=${XDG_DATA_HOME}/npm
cache=${XDG_CACHE_HOME}/npm
tmp=${XDG_RUNTIME_DIR}/npm
init-module=${XDG_CONFIG_HOME}/npm/config/npm-init.js

[[1m[31mnvm[0m]: [1m[3m$HOME/.nvm[0m

Export the following environment variables:

export NVM_DIR="$XDG_DATA_HOME"/nvm

[[1m[31mohmyzsh[0m]: [1m[3m$HOME/.oh-my-zsh[0m

See the relevant issue https://github.com/ohmyzsh/ohmyzsh/issues/9543.

Export the following environment variables:

export ZSH="$XDG_DATA_HOME"/oh-my-zsh

[[1m[31mopam[0m]: [1m[3m$HOME/.opam[0m

Export the following environment variables:

export OPAMROOT="$XDG_DATA_HOME/opam"

Run `opam init` to re-initialize it and check the results with `opam env -v`.

[[1m[33mopenssh[0m]: [1m[3m$HOME/.ssh[0m

*No help available.*

[[1m[31mpass[0m]: [1m[3m$HOME/.password-store[0m

Export the following environment variables:

export PASSWORD_STORE_DIR="$XDG_DATA_HOME"/pass

[[1m[31mpostgresql[0m]: [1m[3m$HOME/.psql_history[0m

Export the following environment variables:

export PSQL_HISTORY="$XDG_DATA_HOME/psql_history"

[[1m[31mprofile[0m]: [1m[3m$HOME/.profile[0m

There are shells and window managers that don't need this file and won't
create it, depending on your config, this file might be deleted or moved.

If you do not know, please do not move this file as it could lead to errors.

[[1m[31mpyenv[0m]: [1m[3m$HOME/.pyenv[0m

Export the following environment variables:

export PYENV_ROOT="$XDG_DATA_HOME"/pyenv

[[1m[31mpylint[0m]: [1m[3m${HOME}/.pylint.d[0m

Export the following environment variables:

export PYLINTHOME="${XDG_CACHE_HOME}"/pylint

[[1m[33mpytest[0m]: [1m[3m$HOME/.pytest_cache[0m

Currently unsupported.

*Relevant issue:* https://github.com/pytest-dev/pytest/issues/1089

[[1m[31mpython-tensorflow[0m]: [1m[3m$HOME/.keras[0m

Export the following environment variables:

export KERAS_HOME="${XDG_STATE_HOME}/keras"

This looks untested however.
*Relevant issue*: https://github.com/tensorflow/tensorflow/issues/38831

[[1m[31mpython[0m]: [1m[3m$HOME/.python_history[0m

Export the following environment variables:

export PYTHONSTARTUP="${XDG_CONFIG_HOME}/python/pythonrc"

Now create the file *pythonrc*, and put the following code into it:

import os
import atexit
import readline

history = os.path.join(os.environ['XDG_CACHE_HOME'], 'python_history')
try:
readline.read_history_file(history)
except OSError:
pass

def write_history():
try:
readline.write_history_file(history)
except OSError:
pass

atexit.register(write_history)

*Note: This won't work if python is invoked with -i flag.*

*Credit:* https://unix.stackexchange.com/a/675631/417527

[[1m[31mrustup[0m]: [1m[3m$HOME/.rustup[0m

Export the following environment variables:

export RUSTUP_HOME="$XDG_DATA_HOME"/rustup

[[1m[31msqlite[0m]: [1m[3m$HOME/.sqlite_history[0m

Export the following environment variables:

export SQLITE_HISTORY="$XDG_CACHE_HOME"/sqlite_history

[[1m[31mstack[0m]: [1m[3m$HOME/.stack[0m

Export the following environment variables:

export STACK_ROOT="$XDG_DATA_HOME"/stack

[[1m[31mtaskwarrior[0m]: [1m[3m$HOME/.task[0m

Set the data location in your taskrc file:

data.location=$XDG_DATA_HOME/task/

[[1m[31mtaskwarrior[0m]: [1m[3m$HOME/.taskrc[0m

Supported since version *2.6*, *XDG_CONFIG_HOME/task/taskrc* needs to exist,
or task will offer to create the legacy file for you.

[[1m[31mtrash[0m]: [1m[3m$HOME/.trash[0m

This is probably a custom directory on your system.

You can move the file to *XDG_DATA_HOME/trash*.

[[1m[31mvim[0m]: [1m[3m$HOME/.viminfo[0m

See help for *.vimrc*

[[1m[31mvim[0m]: [1m[3m$HOME/.vim[0m

See help for *.vimrc*

[[1m[33mvscode[0m]: [1m[3m$HOME/.vscode[0m

Currently unsupported.

*Relevant issue:* https://github.com/microsoft/vscode/issues/3884

[[1m[33mw3m[0m]: [1m[3m$HOME/.w3m[0m

Currently not supported, see this PR https://github.com/tats/w3m/pull/207.

[[1m[31mwget[0m]: [1m[3m$HOME/.wget-hsts[0m

Alias wget to use a custom hsts cache file location:

alias wget=wget --hsts-file="$XDG_DATA_HOME/wget-hsts"

[[1m[31mxonsh[0m]: [1m[3m$HOME/.xonshrc[0m

Alias xonsh to use a custom configuration location:

alias xonsh="xonsh --rc $XDG_CONFIG_HOME/xonsh/xonshrc"

[[1m[33myarn[0m]: [1m[3m$HOME/.yarnrc[0m

You can try to alias *yarn* to use a custom yarnrc location.

yarn --use-yarnrc $XDG_CONFIG_HOME/yarn/config

*yarn* might still generate this file by itself though.

[[1m[31mzsh[0m]: [1m[3m$HOME/.zcompdump[0m

Set this in your zshrc:

compinit -d "$XDG_CACHE_HOME"/zsh/zcompdump-"$ZSH_VERSION"

[[1m[31mzsh[0m]: [1m[3m$HOME/.zsh_history[0m

Export the following environment variable:

export HISTFILE="$XDG_STATE_HOME"/zsh/history

[[1m[31mzsh[0m]: [1m[3m$HOME/.zshenv[0m

Move file to *"$HOME"/.config/zsh/.zshenv* and export the following
environment variable in */etc/zsh/zshenv*:

export ZDOTDIR="$HOME"/.config/zsh

[[1m[31mzsh[0m]: [1m[3m$HOME/.zshrc[0m

Move file to *"$HOME"/.config/zsh/.zshrc* and export the following
environment variable:

export ZDOTDIR="$HOME"/.config/zsh

You can do this in */etc/zsh/zshenv*.

[1m[3mDone checking your [36m$HOME.[0m

[3mIf you have files in your [36m$HOME[0m[3m that shouldn't be there, but weren't recognised by xdg-ninja, please consider creating a configuration file for it and opening a pull request on github.[0m

